:: StoryMenu
[[Stats]]
[[Appearance]]
[[Inventory]]
<br>


:: Stats [noreturn]
You have $dubloons dubloons.
You have $corruption corruption points.
You have been exploring the Abyss for $time days.
<<nobr>>
<<if $time > 0>>
	[[View time spent in each layer|Time Stats]]<br>
<</if>>
<<if $endSpectre > 0>>
The Spectre of the End will come for you in <<print (900 - $time + $endSpectre)>> days.
<<endif>>
<</nobr>><<nobr>><<if $debt > 0>>
	<<print "You have $debt dubloons of debt, which you must pay before voluntarily settling down for any habitation.">><br><<endif>>
<<if $status.penalty > 0>>
<br>You currently have a status condition that is slowing down your next $status.duration travel times by $status.penalty days each.<br>
<<if $hexflame > 9>>
You currently have <<print ($hexflame - 9)>> jinxed flame counters,  increasing travel times by <<print Math.trunc($hexflame / 10)>> and increasing corruption gain by <<print (5 * Math.trunc($hexflame / 10))>> on every layer other than layer 6.
<<endif>>
<<endif>>
	<</nobr>>
Your carry weight is <<print Math.round($carryWeight)>> kg.
Your team has a total carrying capacity of <<print Math.round($totalCarry)>> kg.
Your team is currently carrying <<nobr>>
<<set $temp1 = 0>><<set $temp2 = 0>>
<<for $i = 0; $i < $items.length; $i++>>
		<<set $temp1 += ($items[$i].weight * $items[$i].count)>>
<</for>>
<<if $ownedRelics.length > 0>><<for $i = 0; $i < $ownedRelics.length; $i++>>
		<<set $temp2 += $ownedRelics[$i].weight>>
<</for>><<endif>>
<<set $temp1 += $temp2>>
<<print $temp1.toFixed(1)>><</nobr>> kg.
<<nobr>>
<<if $swapComp > -1>>
	<<print "You are in the body originally belonging to $hiredCompanions[$swapComp].name and $hiredCompanions[$swapComp].name is in your old body.">><br>
<<endif>>

Your companions are:<br>
<<for $i = 0; $i < $hiredCompanions.length; $i++>>
		<<capture $i>>
		<<print "[[$hiredCompanions[$i].name|Companion Info][$temp = $i]]">><br>
		<</capture>>
<</for>>
<</nobr>>

Your curses are:
<<nobr>>
<<for $i = 0; $i < $playerCurses.length; $i++>>
		<<print $playerCurses[$i].name>><br>
<</for>>

<<if $waterL1 > 0>>
	<<print "You have foraged for water on the first layer $waterL1 times.">><br>
<<endif>>
<<if $foodL1 > 0>>
	<<print "You have foraged for food on the first layer $foodL1 times.">><br>
<<endif>>
<</nobr>>


<<back [[$return]]>>


:: Inventory [noreturn]
You have $items[0].count days of single-use water rations.
You have $items[1].count days of food.
You have $items[2].count unfilled flasks.
You have $items[3].count days of water in filled flasks.

Your inventory and the count (if applicable) of each item is as follows:
<<nobr>>
<<for $i = 0; $i < $items.length; $i++>>
	<<capture $i>>
	<<if $items[$i].count > 1 || $items[$i].count < 0>>
			<<print "[[$items[$i].name|Item Info][$temp = $i]]">>		<<print " ">><<print $items[$i].count>><br>
	<<elseif $items[$i].count == 1>>
		<<print "[[$items[$i].name|Item Info][$temp = $i]] ">>
		<br>
	<<endif>>
	<</capture>>
<</for>>
<</nobr>>

<<nobr>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
		<<print "[[$ownedRelics[$i].name|Relic Info][$temp = $i]]">><br>
	<</capture>>
<</for>>
<</nobr>>

<<set $total_value_relics=0>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
<<set $total_value_relics = $ownedRelics[$i].value + $total_value_relics>>
<</for>>
The total value of all your relics is $total_value_relics dubloons.

<<nobr>>
<<if $relicSwap.length > 0>>
	<<for $i = 0; $i < $relicSwap.length; $i++>>
		<<capture $i>>
		You have swapped the abilities of the $relicSwap[$i][0].name and the $relicSwap[$i][1].name.<br>
		<</capture>>
	<</for>>
<<endif>>
<</nobr>>
<<back [[$return]]>>


:: Habitation Ending [ending]
You've reached the end of your journey due to a successful habitation ending. Was it worth it? Did you find what you were looking for?

You can find your collection of relics in your inventory, and your curses in the stats page.

Feel free to begin a new journey, by restarting and choosing the new game+ option. Also feel free to post your build on the thread for the game, the creator of this adaptation always loves to see how people's adventures went!


:: Adjustments [noreturn]
Use this page ONLY to adjust numbers due to interactions that save you money or resources that are not already accounted for in the game, or if there was a bug.

Do not cheat or fear the consequences of angering the things that lurk deep in the Abyss.


[[Adjust dubloons]]
[[Adjust corruption]]
[[Adjust time]]
[[Adjust water]]
[[Adjust food]]
[[Adjust bullets]]

Many options have their abilities as something like a light source or heat source automatically accounted for, but if you find a relic or combination that you think should give you an ability and it doesn't, use one of the following options to give that ability to yourself.

Click this if you have found something that can be used for cutting like a sword:
[[I have a Cutting Instrument|Adjustments][$cut = 1]]
[[No Cutting Instrument|Adjustments][$cut = 1]]

Click this if you have found something that can be used as a light source:
[[I have a Light|Adjustments][$light = 1]]
[[No Light|Adjustments][$light = 0]]

Click this if you have found something that can be used as a substantial heat source:
[[I have a source of Heat|Adjustments][$heat = 1]]
[[No Heat|Adjustments][$heat = 0]]

Click this if you have found something that can be used as a climbing rope:
[[I have something that can be a Rope|Adjustments][$rope = 1]]
[[No Rope|Adjustments][$rope = 0]]

Click this if you have found something that can be used for swimming underwater, similar to scuba gear:
[[I have something that can be used for Swimming|Adjustments][$scuba = 1]]
[[No Swimming|Adjustments][$scuba = 0]]

<<if $abyssKnow == 1>>Click this if you'd like to disable the use of your abyssal knowledge from the encyclopedia or Saeko (This will result in more side effects from foraging):
	[[Turn off abyssal knowledge|Adjustments][$abyssKnow = 0]]
<<endif>>
<<if $abyssKnow == 0 && ($hiredCompanions.some(e => e.name === "Saeko") || $items[5].count > 0)>>Click this if you'd like to enable the use of your abyssal knowledge from the encyclopedia or Saeko (This will result in less side effects from foraging):
	[[Turn on abyssal knowledge|Adjustments][$abyssKnow = 1]]
<<endif>>


[[Confirm Adjustments|$return]]


:: Time Stats [noreturn]
<<nobr>>
<<if $timeL1 > 0>>
	<<print "You have spent $timeL1 days on the first layer of the Abyss.">><br>
<<endif>>
<<if $timeL2 > 0>>
	<<print "You have spent $timeL2 days on the second layer of the Abyss.">><br>
	<<endif>>
<<if $timeL3 > 0>>
	<<print "You have spent $timeL3 days on the third layer of the Abyss.">><br>
	<<endif>>
<<if $timeL4 > 0>>
	<<print "You have spent $timeL4 days on the fourth layer of the Abyss.">><br>
	<<endif>>
<<if $timeL5 > 0>>
	<<print "You have spent $timeL5 days on the fifth layer of the Abyss.">><br>
	<<endif>>
<<if $timeL6 > 0>>
	<<print "You have spent $timeL6 days on the sixth layer of the Abyss.">><br>
	<<endif>>
<<if $timeL7 > 0>>
	<<print "You have spent $timeL7 days on the seventh layer of the Abyss.">><br>
	<<endif>>
<<if $timeL8 > 0>>
	<<print "You have spent $timeL8 days on the eighth layer of the Abyss.">><br>
	<<endif>>
<<if $timeL9 > 0>>
	<<print "You have spent $timeL9 days on the ninth layer of the Abyss.">><br>
<<endif>>


<<if $waterL1 > 0>>
	<<print "You have foraged for water on the first layer $waterL1 times.">><br>
<<endif>>
<<if $foodL1 > 0>>
	<<print "You have foraged for food on the first layer $foodL1 times.">><br>
<<endif>>

<<if $waterL2 > 0>>
	<<print "You have foraged for water on the second layer $waterL2 times.">><br>
<<endif>>
<<if $foodL2 > 0>>
	<<print "You have foraged for food on the second layer $foodL2 times.">><br>
<<endif>>

<<if $waterL3 > 0>>
	<<print "You have foraged for water on the third layer $waterL3 times.">><br>
<<endif>>
<<if $foodL3 > 0>>
	<<print "You have foraged for food on the third layer $foodL3 times.">><br>
<<endif>>

<<if $waterL4 > 0>>
	<<print "You have foraged for water on the fourth layer $waterL4 times.">><br>
<<endif>>
<<if $foodL4 > 0>>
	<<print "You have foraged for food on the fourth layer $foodL4 times.">><br>
<<endif>>

<<if $waterL1 > 0>>
	<<print "You have foraged for water on the fifth layer $waterL5 times.">><br>
<<endif>>
<<if $foodL1 > 0>>
	<<print "You have foraged for food on the fifth layer $foodL5 times.">><br>
<<endif>>
<</nobr>>

<<back>>


:: Version End
That's all for this version!

Thank you for playing version 0.4 of the interactive adaptation of Abyss Diver by FloricSpacer.

I'd like to hear any feedback about the current state of the game and any bugs or typos you've found!

I'm working on adding the remaining layers quickly, though it is pretty labor intensive, so that depends on my free time irl. I think a lot of the systems from the first few layers should carry over to later ones well, but there are also a lot of new mechanics that need to be implemented. Hopefully it doesn't take long and I can post the rest of the layers soon!

As I add more systems and the game gets more complicated under the hood, I expect many bugs that I didn't catch to manifest, so detailed bu reports for any errors you've encountered are very valuable.

Thanks again for playing!


:: Appearance [noreturn]
<<nobr>>
<<HeightCorrected>>
<<appGender>>
<<LibidoCorrected>>
<<AppearanceCorrect>>
/*<<for $i = 0; $i < $GenderLog.length; $i++>>
		<<print $GenderLog[$i].name>>
<</for>>*/
<</nobr>>
Your name is $app.name and you are a $app.sex.

Your hair color is $app.hair, while your eyes are colored $app.eyeColor.
You have $app.skinColor colored $app.skinType skin.
You are <<print Math.round($app.heightCor)>> cm tall.
You have $app.ears ears.
You are $app.age years old<<if $app.age != $app.appAge>>, but you appear to be <<print Math.round($app.appAge)>> years old<<endif>>.

<<nobr>>
<<if $dollevent2== true>>
	<br><br>You seem to be stuck wearing a tattered pink dress that looks earily similar to the one your doll is wearing. Annoyingly, this prevents you from wearing other clothes, even in harsh environments.
<<endif>>
<<if $hornyCount == 1>>
	<br>You have a noticeable demonic horn protruding from the center of your forehead.
<<elseif $hornyCount == 2>>
	<br>You have 2 noticeable demonic horns protruding from your head.
<<endif>>

<br><br>$app.desc
<<for $i = 0; $i < $playerCurses.length; $i++>>
	<<print $playerCurses[$i].appDesc>>
<</for>>
<<if $playerCurses.some(e => e.name === "Lactation Rejuvination A") && $playerCurses.some(e => e.name === "Lactation Rejuvination B")>>
	<<print "You are heavily lactating at all times, and need frequent milking breaks. Ignoring this causes your breasts to get sore and expand rather quickly. ">>
<<elseif $playerCurses.some(e => e.name === "Lactation Rejuvination A") || $playerCurses.some(e => e.name === "Lactation Rejuvination B")>>
	<<print "You are lactating at all times, but thankfully it's just enough to be a bit annoying. ">>
<<endif>>

<<if $semenCount > 0>>
	You must drink <<print ($semenCount * 10)>> ml of sexual fluids every day, or else you feel as though you were starving. This averages <<print ($semenCount * 2)>> loads per day.<<print " ">>
<<endif>>
<<if $quotaCount > 0>>
	You need to directly bring other people to orgasm <<if $playerCurses.some(e => e.name === "Sleep Tight")>><<print ($quotaCount * 3)>><<else>><<print ($quotaCount * 2)>><<endif>> times per day, or else you feel a huge wave of exhaustion and difficulty focusing, as if you hadn't slept for several days. <<if $playerCurses.some(e => e.name === "Blushing Virgin")>>And yet every time feels like your first time ever, making it a bit awkward to save time with group sessions!<<endif>><<print " ">>
<<endif>>
<<if $limelightCount > 0>>
	You need to be the focus of <<print ($limelightCount * 50)>> orgasms per day, even if you are not causing them directly, or else you cease to feel joy entirely, falling into a deep depression. On top of that, your misadventures in the abyss are now streamed to quite a lot of people. This means <<if $playerCurses.some(e => e.name === "Semen Demon") || $playerCurses.some(e => e.name === "Quota")>>not only you have to have sex with so many people, but also <<endif>>you have to keep a steady supply of dirty photos and videos featuring you circling around for others to masturbate to. <<if $playerCurses.some(e => e.name === "Blushing Virgin")>>This line of work really does not go well with someone as shy as you! <<endif>><<print " ">>
<<endif>><br><br>
<<if $bewitchBabies > 0>>
	Due to your consumption of the contaminated rainwater of the second layer, your fertility has greatly increased. The average amount of  babies born from any pregnancy you're involved in is increased by <<print $bewitchBabies>>.<<print " ">>
<<endif>>
<<if $algalSize > 0>>
	Your <<if $app.sex == "male">>testicles are<<elseif $app.sex == "female">>clitoris is<<else>>testicles and clitoris are<<endif>> approximately <<print (10 * $algalSize)>>% lager than usual due to drinking contaminated melted snow from the fourth layer.<<print " ">>
<<endif>>
<<if $crumbleFluid > 0>>
	Due to the consumption of crumbleweed from the fifth layer, your production of sexual fluids has increased by <<print $crumbleFluid>>%. <<if $crumbleFluid > 50>>Try not to get too dehydrated if you're especially sexually active.<<endif>><<print " ">>
<<endif>>

<<if $app.gender <= 1>>
You look like a typical man, with a masculine facial structure and a body profile that would obviously seem male from a distance.
<<elseif $app.gender == 2>>
You look like man, but your features are a bit softer than average. No one would mistake you for a woman, but maybe the label of "twink" could apply to you.
<<elseif $app.gender == 3>>
You look pretty androgynous. If someone were just looking at you with clothes on, most people would guess you look like a very effeminate man, but others might see you as a butch woman.
<<elseif $app.gender == 4>>
You look pretty androgynous. If someone were just looking at you with clothes on, most people would guess you look like a very butch woman, but others might see you as an effeminate man.
<<elseif $app.gender == 5>>
You look like a woman, but a bit on the masculine side. Many people would likely assume you're a tomboy based on your appearance.
<<elseif $app.gender >= 6>>
You look like a typical woman, with a feminine face and a figure that looks clearly female from a distance.
<<endif>>
<<if $app.fit>8>>
Working out with the World Stone has given you a fit body with especially well-toned arm muscles.
<<elseif $app.fit>6>>
You have a well-toned athletic body.
<<elseif $app.fit>4>>
You have a unremarkable but healthy body.
<<else>>
Your body looks rather frail.
<<endif>>
<br><br>
<<if $app.libido <= 1>>
You have a very low libido, without much interest at all in sex.
<<elseif $app.libido == 2>>
You have your normal libido, being somewhat interested in sex, but you can certainly control yourself.
<<elseif $app.libido == 3>>
You have a slightly elevated libido. You will feel hot and bothered more reularly than you are accustomed to. Uncomfortable, but manageable.
<<elseif $app.libido == 4>>
You have an elevated libido. Your sexual urges are frequent and very difficult to resist. Can be only barely hidden; leading a normal lifestyle will be possible, but frequently frustrating.
<<elseif $app.libido == 5>>
Your libido would be considered a symptom of a mental disorder. You're hopelessly addicted to sex, and it is impossible to keep your desired hidden.
<<elseif $app.libido == 6>>
You desire sex about as much as basic necessities as food and water, perhaps slightly more. You go to great lengths for sex, and it dominates your life.
<<elseif $app.libido >= 7>>
You need sex constantly - having sex will only sate your hunger for a matter of minutes, and you will find little meaning in things that don't lead to you having more sex.
<<endif>>
<br>
<<if $app.penisCor>=1>>
	<<if $app.penisCor == 1>>
	You have a very small penis of <<print Math.round($app.penisCor)*2.5>> cm, which is honestly barely larger than a clitoris.
	<<elseif $app.penisCor <= 2.5>>
	You have a very small penis of <<print Math.round($app.penisCor)*2.5>> cm. You need some very tight pants to show something that even remotely resembles a bulge in your crotch.
	<<elseif $app.penisCor <= 3.5>>
	You have a small penis of <<print Math.round($app.penisCor)*2.5>> cm. You are a bit self conscious about it, but it works perfectly well.
	<<elseif $app.penisCor <= 4.5>>
	You have a below average penis of <<print Math.round($app.penisCor)*2.5>> cm. Yeah, you know it's not that big, but you try not to get too hung up on it.
	<<elseif $app.penisCor <= 5.5>>
	You have a pretty average penis of <<print Math.round($app.penisCor)*2.5>> cm. Nothing to be ashamed of, but nothing to write home about either.
	<<elseif $app.penisCor <= 6.5>>
	You have a totally average penis of <<print Math.round($app.penisCor)*2.5>> cm, very typical for a man in your demographics.
	<<elseif $app.penisCor <= 7.5>>
	You have a slightly above average penis of <<print Math.round($app.penisCor)*2.5>> cm, not anything out of the ordinary, but some people may particularly enjoy it.
	<<elseif $app.penisCor <= 8.5>>
	You have a large penis of <<print Math.round($app.penisCor)*2.5>> cm, people who like larger sizes are likely to be impressed.
	<<elseif $app.penisCor <= 9.5>>
	You have a very large penis of <<print Math.round($app.penisCor)*2.5>> cm, size queens dream of meeting someone like you, but tighter orifices can be a bit of an issue occasionally.
	<<elseif $app.penisCor > 9.5>>
	You have a extremely large penis of <<print Math.round($app.penisCor)*2.5>> cm. Are you even going to able to have sex with this monster schlong?
	<<endif>>
<<endif>>
<br><br>
<<if $app.vag == 1>>
You have a nice pussy sitting between your legs, pretty typical for a woman in your demographics.
<<endif>>
<<if $app.womb > 0>>
<br>You have an extra womb in your $app.womb1.
<<endif>>
<<if $app.womb > 1>>
<br>You have another extra womb in your $app.womb2.
<<endif>>
<br><br>

<<BreastCorrected>>
<<if $app.breastsCor < 1>>
You have a flat, <<GenderPronoun>> chest.
<<elseif $app.breastsCor < 2>>
You have AA cup mosquito bites, much smaller than most women.
<<elseif $app.breastsCor < 3>>
You have cute A cup breasts, small but not out of the ordinary.
<<elseif $app.breastsCor < 4>>
You have supple B cup breasts.
<<elseif $app.breastsCor < 5>>
You have perfectly round C cup breasts.
<<elseif $app.breastsCor < 6>>
You have nice handfuls of D cup breasts.
<<elseif $app.breastsCor < 7>>
You have larger than most E cup breasts.
<<elseif $app.breastsCor < 8>>
Your sizes are starting to get cumbersome with your F cup breasts.
<<elseif $app.breastsCor < 9>>
You've got to watch out for back pain with your G cup breasts.
<<elseif $app.breastsCor < 10>>
You've got to watch out for back pain with your H cup breasts.
<<elseif $app.breastsCor < 11>>
You've got to watch out for serious back pain with your I cup breasts.
<<elseif $app.breastsCor < 12>>
You've got to watch out for serious back pain with your J cup breasts.
<<elseif $app.breastsCor < 13>>
You've got to watch out for serious back pain with your K cup breasts.
<<elseif $app.breastsCor < 14>>
You've got to watch out for serious back pain with your L cup breasts.
<<elseif $app.breastsCor < 15>>
You've got to watch out for serious back pain with your M cup breasts.
<<elseif $app.breastsCor < 16>>
You've got to watch out for very serious back pain with your N cup breasts.
<<elseif $app.breastsCor < 17>>
You've got to watch out for very serious back pain with your O cup breasts.
<<elseif $app.breastsCor < 18>>
You've got to watch out for very serious back pain with your P cup breasts.
<<elseif $app.breastsCor < 19>>
You've got to watch out for very serious back pain with your Q cup breasts.
<<elseif $app.breastsCor >= 19>>
You've got to watch out for very serious back pain with your R cup breasts.
<<elseif $app.breastsCor > 19>>
You've got to watch out for extremely serious back pain with your S cup breasts.
<<endif>>

<<if $app.tail.length > 0>>
<<for $i = 0; $i < $app.tail.length; $i++>>
		You have a $app.tail[$i] tail right above your butt.<br>
<</for>>
<<endif>>
<br>
Overall the world would probably see you now as a <<PerceivedStature>> <<Inhuman>> <<PerceivedRace>> <<PerceivedGender>>.<br>
<</nobr>>
<<back [[$return]]>>

:: Adjust dubloons [noreturn]
<<set $temp = 0>>How many dubloons would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$dubloons += (parseInt($temp))]]
<<back>>


:: Adjust corruption [noreturn]
<<set $temp = 0>>How many corruption points would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$corruption += (parseInt($temp))]]
<<back>>


:: Adjust time [noreturn]
<<set $temp = 0>>How many days would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$time += (parseInt($temp))]]
<<back>>


:: Adjust water [noreturn]
<<set $temp = 0>>How many water rations would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$items[0].count += (parseInt($temp))]]
<<back>>


:: Adjust food [noreturn]
<<set $temp = 0>>How many food rations would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$items[1].count += (parseInt($temp))]]
<<back>>


:: Commerce Balloon [noreturn]
Using your balloon, you're able to send up any relics you want to sell and get back any items you want to buy (or just dubloons if you'd prefer).

<<nobr>>
[[Send a request to the Outset Town Administration|Balloon Admin]]
<<if $items[19].count > 0>>
[[Send a request to the Relic Workshop|Balloon Workshop]]<br>
<<endif>>

<<if $tunnelUsed == 1>>
[[Ask people on the surface to look for the items you sent to the surface from the One-sided Tunnel|Surface Tunnel Retrieval]]<br><br>
<<endif>>
<</nobr>>[[Sell relics|Balloon Sell1]]
[[Buy items|Balloon Store1]]


[[Finish using balloon to trade|$return][$comBalloon = 0]]


:: Balloon Sell1 [noreturn]
Here you can permanently sell any of your collected relics for a nice haul of dubloons. You can use this to fund further expeditions, pay off your debt, or just get a nice payday at the end of your expedition.

Choose the relic you would like to sell:
<<nobr>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
		<<if $ownedRelics[$i].name=="Creepy Doll" && $creepydoll.affec > 5>>
			You can't seem to part ways with the Creepy Doll<br>
		<<elseif $ownedRelics[$i].name=="Chain of Lorelei">>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$colwear=0,$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i)]]">><br>
		<<elseif $ownedRelics[$i].name=="Heart-stealing Stole">>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$hsswear=0,$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i)]]">><br>
		<<elseif $ownedRelics[$i].name=="Sibyl Blend">>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$SibylBuff=0,$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i)]]">><br>
		<<elseif $ownedRelics[$i].name=="World Stone" && $LilyPromise>>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i), $companionLily.affec-=(5-$hsswear)]]">> <br>You promised Lily she could use the World Stone, selling it now will surely dissapoint her greatly. <br>
		<<elseif $ownedRelics[$i].name=="Everheavea">>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i), $items[2].count-=2]]">>
		<<else>>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value + $sellAdd)>><<print " dubloons ">><<print "[[Sell|Balloon Sell1][$dubloons += ($ownedRelics[$i].value + $sellAdd), $soldRelics.push($ownedRelics[$i]), $ownedRelics.deleteAt($i)]]">><br>
		<<endif>>
	<</capture>>
<</for>>
<</nobr>>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Store1 [noreturn]
Here are all of the items available for your to spend you $dubloons dubloons on:

[img[setup.ImagePath+'Clipped-Fin/Abyss Diver Page 1-items.png']]

[[Buy Water|Balloon Water]]
[[Buy Food Rations|Balloon Food]]
[[Buy Flasks|Balloon Flasks]]
[[Buy Medkits|Balloon Medkits]]
[[Buy Encyclopedia Abyssia|Balloon Encyclopedia]]
[[Buy Messenger Baloons|Balloon Messenger]]
[[Buy Commerce Balloons|Balloon Commerce]]
[[Buy Escape Balloons|Balloon Escape]]
[[Buy Torches|Balloon Torches]]
[[Buy Flashlight|Balloon Flashlight]]
[[Buy Rope|Balloon Rope]]
[[Buy Compass|Balloon Compass]]
[[Buy Pistol|Balloon Pistol]]
[[Buy Bullets|Balloon Bullets]]
[[Buy Sword|Balloon Sword]]
[[Buy Scuba Gear|Balloon Scuba]]
[[Buy Warding Braces|Balloon Warding]]
[[Buy Smartphone|Balloon Smartphone]]
[[Buy Inn Room Pass|Balloon Inn]]
[[Buy Relic Workshop Pass|Balloon Workshop1]]


[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Sell 2 [noreturn]
<<set $dubloons += ($ownedRelics[$temp].value + $sellAdd)>>
The relic $ownedRelics[$temp].name has been successfully sold and you've gotten your dubloon payment. You notice the person you sold it to quickly runs off, either to make use of it or sell it again in the everlasting chain of capitalism. Either way, you won't be getting that relic back easily.<<run $ownedRelics.deleteAt($temp)>>

[[Sell more relics|Balloon Sell1]]
[[Continue your balloon business|Commerce Balloon]]


:: Balloon Water [noreturn]
How much water would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[0].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[0].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Food [noreturn]
How many days of food rations would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[1].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[1].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Flasks [noreturn]
How many water flasks would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[3].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[2].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Medkits [noreturn]
How many days of medkits would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[4].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[4].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Encyclopedia [noreturn]
How many copies of the Encyclopedia Abyssia would you like to buy?

(Note: there is no additional benefit for buying more than 1 copy.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[5].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[5].cost), $abyssKnow = 1]]
<<back [[Balloon Store1]]>>


:: Balloon Messenger [noreturn]
How many days of messenger balloons would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[6].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[6].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Commerce [noreturn]
How many days of commerce balloons would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[7].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[7].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Escape [noreturn]
How many days of escape balloons would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[8].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[8].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Torches [noreturn]
How many days of torches would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[9].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[9].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Flashlight [noreturn]
How many flashlights would you like to buy?

(Note: there is no additional benefit for buying more than 1 flashlight.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[10].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[10].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Rope [noreturn]
How many ropes would you like to buy?

(Note: there is no additional benefit for buying more than 1 rope.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[11].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[11].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Compass [noreturn]
How many compasses would you like to buy?

(Note: there is no additional benefit for buying more than 1 compass.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[12].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[12].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Pistol [noreturn]
How many pistols would you like to buy?

(Note: there is no additional benefit for buying more than 1 pistol.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[13].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[13].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Bullets [noreturn]
How many sets of 6 bullets would you like to buy?

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[20].count += (parseInt($temp) * 6), $dubloons -= (parseInt($temp)*$items[20].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Sword [noreturn]
How many swords would you like to buy?

(Note: there is no additional benefit for buying more than 1 sword.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[14].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[14].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Scuba [noreturn]
How many sets of scuba gear would you like to buy?

(Note: there is no additional benefit for buying more than 1 set of scuba gear.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[15].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[15].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Warding [noreturn]
How many warding braces would you like to buy?

(Note: You are only allowed to buy 2 warding braces unless you have an effect or combination of relics that specifically would allow you to buy more.)

<<textbox "$temp" "">>

[[Confirm|Balloon Store1][$items[16].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[16].cost), $corruption += (20 * $temp)]]
<<back [[Balloon Store1]]>>


:: Balloon Smartphone [noreturn]
How many smartphones would you like to buy?

(Note: there is no additional benefit for buying more than 1 smartphone.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[17].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[17].cost), $abyssKnow = 1, $light = 1]]
<<back [[Balloon Store1]]>>


:: Balloon Inn [noreturn]
How many inn room passes would you like to buy?

(Note: there is no additional benefit for buying more than 1 inn room pass.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[18].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[18].cost)]]
<<back [[Balloon Store1]]>>


:: Balloon Workshop1 [noreturn]
How many relic workshop passes would you like to buy?

(Note: there is no additional benefit for buying more than 1 relic workshop pass.)

<<textbox "$temp" "1">>

[[Confirm|Balloon Store1][$items[19].count += parseInt($temp), $dubloons -= (parseInt($temp)*$items[19].cost)]]
<<back [[Balloon Store1]]>>


:: Item Info [noreturn]
<<print $items[$temp].name>><<nobr>>
<<if $items[$temp].count > 1>>
<br>Count: $items[$temp].count
<<endif>><</nobr>>

[img[setup.ImagePath+$items[$temp].image]]

<<print $items[$temp].desc>>

Weight: $items[$temp].weight kg
Cost: $items[$temp].cost dubloons

<<back>>


:: Credits
Thank you so much to anyone who has helped me out with this project! I appreciate all the feedback and suggestions I get, especially feature requests and bug reports! I try to respond promptly to these, so please let me know if you have an idea or find a bug!

Thanks to Ilse91 for helping with a huge variety of code and adding some new features regarding height, carry weight, companions, conversations, and endings. She also helped in getting my motivation for working on the game back and her help is incredibly appreciated.

Thanks to Emmeken for transcribing the item descriptions for me.
Thanks to dogflail for writing drafts for some of the curse appearance screen decriptions.
Thanks to abiciendimittent for transcribing the relic and curse descriptions (will be added to the game when they are completed)
Thanks to Stadler for finding many bugs and reporting them to me.
Thanks to HiEv for having a great tutorial with sample code that I used in this project.
Thanks to laevus for bug reports.
Thanks to Kras for suggestions and bug reports.
And thanks to Lily for encouraging me when I got some negative feedback early in the initial draft form of this game.

I seriously appreciate all of your help and I'm really happy that people were willing to help improve this project with me.


:: Surface Tunnel Retrieval
You manage to find your items safely, retrieving all of them and putting them right back into your inventory where they belong. Luckily no one seems to have disturbed or taken anything in the time it took you to get back up here and find your items.

<<if $comBalloon == 0>>
[[Continue your business in Outset Town|Surface Hub]]
<<else>>
[[Continue using the commerce balloon|Commerce Balloon]]
<<endif>>

<<nobr>>
<<for $i = 4; $i < $items.length; $i++>>
	<<set $items[$i].count += $vaultItems[$i].count>>
	<<set $vaultItems[$i].count = 0>>
<</for>>
<<set $dubloons += $tunnelDubloons>>
<<set $tunnelUsed = 0>>
<</nobr>>


:: GameOver
@@.layerTitle;YOU ARE DEAD@@

<<if $items[1].count < -5>>
Your food ration count has gone below -5, indicating that you have avoided eating for a few days, but eventually starved to death. If you didn't realize what had happened, you can avoid this fate by pressing the back arrow in the top left until you reach the main part of a layer. Once you are there, you can take the habitation option for your layer to avoid death.
<<else>>
Your days of water remaining count has gone below -2, indicating that you managed to survive without water for a few days, but eventually died of dehydration. If you didn't realize what had happened, you can avoid this fate by pressing the back arrow in the top left until you reach the main part of a layer. Once you are there, you can take the habitation option for your layer to avoid death.
<<endif>><<if $corruption < 0>>

Due to your negative corruption, you are unable to accept a habitation option at this time. However, you can go back to the main part of the layer, then take curses until you have reached a corruption above 0 to survive. This is highly reccomended if you wish to avoid death.
<<endif>>


:: BrokerEnd
YOU MAY NOT ALLOW YOUR CORRUPTION TO GO BELOW 0 DUE TO YOUR BROKER'S DEAL.

You have chosen to accept the deal of the Empty-handed Broker and attempted to take an action that would reduce your corruption points below 0. Because this is not possible, you must go back to avoid performing this action.

If you would still like to perform this action, you may go back to the main part of the layer you were on and accept curses to raise your corruption point total.

<<back>>


:: AgeLimit
YOU MUST BE AT LEAST 18 TO PLAY THIS GAME

If you are over 18, please go back and enter an age above 18 to continue.

<<back>>


:: Use Items and Relics [noreturn]
<<nobr>>
<<if $items[7].count > 0>>
[[Use a commerce balloon to trade with the surface|Commerce Balloon][$items[7].count -=1, $comBalloon = 1]]<br>
<<endif>>
<<if $items[8].count > 0>>
	<<if $currentLayer==0>>
		There is no need to deploy your escape balloon while you are on the surface.
	<<elseif $currentLayer==1>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L1][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==2>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L2][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==3>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L3][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==4>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L4][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==5>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L5][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==6>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L6][$items[8].count -=1, $escBalDepl=1]]<br>
	<<elseif $currentLayer==7>>
		[[Use an escape balloon to escape towards the surface|Escape Balloon L7][$items[8].count -=1, $escBalDepl=1]]<br>
	<<endif>>
<<endif>>
<<if ($items[4].count > 0) && ($status.penalty > 0) && $dragonBurn == 0>>
<br>You currently have a status condition that is slowing down your next $status.duration travel times by $status.penalty days each.<br>
[[Use a medkit to cure your status condition instantly|Use Items and Relics][$status.penalty = 0, $status.duration = 0, $items[4].count -=1]]<br>
	<<endif>>
<<if ($items[4].count > 1) && ($status.penalty > 0) && $dragonBurn == 1>>
<br>You currently have a severe dragon burn which is slowing you down permanently until you heal it, however it will take 2 medkits to heal it properly.<br>
[[Use a medkit to cure your status condition instantly|Use Items and Relics][$status.penalty = 0, $status.duration = 0, $items[4].count -= 2, $dragonBurn = 0]]<br>
	<<endif>>

<<if $items[21].count > 0>>
[[Discard all your used torches|Use Items and Relics][$items[21].count =0]]<br>
<<endif>>

	<<if $ownedRelics.some(e => e.name === "Heart-stealing Stole")>>
		<<if $hsswear>>
		<br>You can take off the stole you are using to improve relations with your companions. This will remove the benefit in affection events you are gaining from the Relic.<br>
		[[Take off the Heart-stealing Stole|Use Items and Relics][$hsswear=0]]<br>
		<<else>>
	<br>You can put on the majestic stole you have, it is sure to help sway the hearts of your companions to become more friendly and respect you as a leader. This increases the affection gain from any event that alters affection.<br>
			[[Wear the Heart-stealing Stole|Use Items and Relics][$hsswear=1]]<br>
		<<endif>>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "World Stone")>>
		<<if $app.fit>=10>>
			<br>You don't think you would get anymore fit than you are from working out with the World Stone. Your fitness has reached near peak human levels, and while you might be able to improve a bit more with a dedicated workout period, it's not likely you'll be able to achieve that in the Abyss.<br>
		<<elseif $LastEx < ($time-1)>>
			<br> You can make use of the World Stone to make use of a perfect fitness routine, tuned precisely to the needs of your body. If you want to get stronger and more fit, using this relic is the best way to do it.<br>
			[[Work out with the World Stone|Use Items and Relics][$app.fit+=1, $LastEx = $time]]<br>
		<<else>>
			<br>Your arms are still sore from your last workout with the World Stone, so even with the help of the Relic you won't get much benefit from working out more.<br>
		<<endif>>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "Chain of Lorelei")>>
		<<if $colwear>>
			<br>Currently your voice is different than the one you were used to. Right now you have a feminine voice that sounds like its coming from someone with a natural talent for singing, as if you could be the central figure in an angelic chorus or make a career in music with only minimal training.<br>
			[[Take the Chain of Lorelei off|Use Items and Relics][$colwear=0]]<br>
		<<else>>
		    <br>You have a fairly normal <<GenderPronoun>> voice, but perhaps you sound different if you took advantage of one of your Relics?<br>
			[[Wear the Chain of Lorelei|Use Items and Relics][$colwear=1]]<br>
		<<endif>>
	<<endif>>


	<<if $ownedRelics.some(e => e.name === "From Seafoam")>>
		<<if !$scent>>
			<br>Currently you have a rather neutral scent<br>
			[[Scrub yourself with the sponge while imagining a sweet floral scent|Use Items and Relics][$scent=1]]<br>
			[[Scrub yourself with the sponge while imagining a spicy musky scent|Use Items and Relics][$scent=-1]]<br>
		<<elseif $scent==1 >>
			<br>Currently you have a sweet and floral scent lingering around you<br>
			[[Scrub yourself with the sponge while imagining a sweet floral scent|Use Items and Relics][$scent=0]]<br>
			[[Scrub yourself with the sponge while imagining a spicy musky scent|Use Items and Relics][$scent=-1]]<br>
		<<else>>
			<br>Currently you have a strong musky scent lingering around you<br>
			[[Scrub yourself with the sponge while imagining the sponge to be odourless|Use Items and Relics][$scent=0]]<br>
			[[Scrub yourself with the sponge while imagining a sweet floral scent|Use Items and Relics][$scent=1]]<br>
		<<endif>>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "Sibyl Blend")>>
		<br>You have posession of the Sybil Blend, brewing it and looking in the leaves can point you in the direction of a Relic, saving you 1 day on your next Relic travel time.<br>
		<<if $SybilBuff == 0>>
			[[Use the Sybil Blend to help find the next Relic more quickly|Use Items and Relics][$SybilBuff = 1]]<br>
		<<else>>
			<br>The Sybil Blend tea leaves have pointed you in a clear direction for the next Relic. You are confident that finding it will take you 1 less day than it normally would.<br>
			[[Stop using the Sybil Blend to help find future Relics|Use Items and Relics][$SybilBuff = 0]]<br>
		<<endif>>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "Kin Shifter")>>
		<br>A glob of putty-like slime lays ready for you to copy other relics, if you desire to.<br>
			[[Use the Kin Shifter to copy relics|Kin Shifter Use][$tempValue = 0]]<br><br>
	<<endif>>
	<<if $ownedRelics.some(e => e.name === "Forbidden Grimoire") && $hiredCompanions.length > 0>>
		<br>A ragged book written in a strange, ancient language sits in your bag. It holds forgotten knowledge that can improve anyone's skills, doubling any numeric benefit they provide.<br>
			[[Use the Forbidden Grimoire to improve someone's abilities|Forbidden Grimoire Select]]<br><br>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "Managed Misfortune")>>
		You look at the set of marbles known as the Managed Misfortune.
		<<if $StoredCurse != "" && !$ManagedMisfortuneActive>>
		You have stored the curse named $StoredCurse.name in them. <br>
			<<if $StoredCurse.name=="Perma-dye" && $curse7.variation=="">>
				<br>As you look into the marbles you see your own reflection in the marble, as well as the miasma of the curse swirling within<br>
				The longer you look the more color if your hair seems to change in your reflection. After a while you can see that your hair seems as if it had always been its new color. Now, what color do you see?<br>
				Please enter your new hair color:<br><br>

				<<textbox "$curse7.variation" "turquoise" "Use Items and Relics">>
			<<elseif $playerCurses.some(e => e.name === "Fluffy Ears") && $curse17.variation=="">>

				What type of ears would you like to gain?<br><br>

				<<radiobutton "$curse17.variation" "furry cat" checked>> Cat<br>
				<<radiobutton "$curse17.variation" "fluffy dog" >> Dog<br>
				<<radiobutton "$curse17.variation" "floppy cow" >> Cow<br>
				<<radiobutton "$curse17.variation" "furry monkey" >> Monkey<br>
				<<radiobutton "$curse17.variation" "furry rabbit" >> Rabbit<br>
				<<radiobutton "$curse17.variation" "furry fox" >> Fox<br>
				<<radiobutton "$curse17.variation" "furry mouse" >> Mouse<br>
				<<radiobutton "$curse17.variation" "pig" >> Pig<br>
				<<radiobutton "$curse17.variation" "furry horse" >> Horse<br>
			<<elseif $playerCurses.some(e => e.name === "Fluffy Tail") && $curse18.variation=="">>

				What type of tail would you like to gain?<br><br>

				<<radiobutton "$curse18.variation" "flowing cat" checked>> Cat<br>
				<<radiobutton "$curse18.variation" "wagging dog" >> Dog<br>
				<<radiobutton "$curse18.variation" "lazy cow" >> Cow<br>
				<<radiobutton "$curse18.variation" "prehensile monkey" >> Monkey<br>
				<<radiobutton "$curse18.variation" "fluffy rabbit" >> Rabbit<br>
				<<radiobutton "$curse18.variation" "bushy fox" >> Fox<br>
				<<radiobutton "$curse18.variation" "long mouse" >> Mouse<br>
				<<radiobutton "$curse18.variation" "twisted pig" >> Pig<br>
				<<radiobutton "$curse18.variation" "swaying horse" >> Horse<br>
			<<elseif $playerCurses.some(e => e.name === "Maximum Fluff") && $curse19.variation=="">>
				What type of fur would you like to gain?<br><br>

				<<radiobutton "$curse19.variation" "cat-furred" checked>> Cat<br>
				<<radiobutton "$curse19.variation" "dog-furred" >> Dog<br>
				<<radiobutton "$curse19.variation" "cow-furred" >> Cow<br>
				<<radiobutton "$curse19.variation" "monkey-furred" >> Monkey<br>
				<<radiobutton "$curse19.variation" "rabbit-furred" >> Rabbit<br>
				<<radiobutton "$curse19.variation" "fox-furred" >> Fox<br>
				<<radiobutton "$curse19.variation" "mouse-furred" >> Mouse<br>
				<<radiobutton "$curse19.variation" "pig-furred" >> Pig<br>
				<<radiobutton "$curse19.variation" "horse-furred" >> Horse<br>
			<<else>>
				<<if $StoredCurse.name=="Dizzying Heights" && $HeightIncrease == 0>>
					<br>As you look into the marbles you see your own reflection in the marble, as well as the miasma of the curse swirling within<br>
					You see your own reflection alternating between growing and shrinking. After a while you see the curse has settle on a height... <br><br>

					<<radiobutton "$HeightIncrease " -1 checked>> Decrease<br>
					<<radiobutton "$HeightIncrease " 1 >> Increase<br>

				<<endif>>
				<<link "Acitivate the stored curse" "Use Items and Relics">>
					<<set $playerCurses.push($StoredCurse)>>
					<<if $StoredCurse.type == "Height">>
						<<set $HeightLog.push($StoredCurse)>>
					<<elseif $StoredCurse.type == "Gender">>
						<<set $GenderLog.push($StoredCurse)>>
					<<elseif $StoredCurse.type == "Age">>
						<<set $AgeLog.push($StoredCurse)>>
					<<elseif $StoredCurse.type == "Libido">>
						<<set $LibidoLog.push($StoredCurse)>>
					<<endif>>
					<<set $ManagedMisfortuneActive=true>>
				<</link>>
			<<endif>>
		<<elseif $ManagedMisfortuneActive >>
		You are affected by the curse stored in the marbles called $StoredCurse.name. <br>
		<<link "Deacitivate the stored curse" "Use Items and Relics">>
			<<set $targetCurse = $StoredCurse>>
			<<include "CurseRemoval">>
			<<set $ManagedMisfortuneActive=false>>
		<</link>>		
		<<else>>
		<br>You need to store a curse in the relic before you can use it<br>
		<<endif>>
	<<endif>>

	<<if $ownedRelics.some(e => e.name === "Gleam Dazer")>>
	<br>You can use the Gleam Dazer one time to view a glimpse of the next layer and see what threats, relics, and curses await you further into the Abyss.<br>
		<<if $currentLayer == 0>>
			[[Peek at what is waiting for you on the first layer|Layer1 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 1>>
			[[Peek at what is waiting for you on the second layer|Layer2 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 2>>
			[[Peek at what is waiting for you on the third layer|Layer3 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 3>>
			[[Peek at what is waiting for you on the fourth layer|Layer4 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 4>>
			[[Peek at what is waiting for you on the fifth layer|Layer5 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 5>>
			[[Peek at what is waiting for you on the sixth layer|Layer6 Preview]]<br>
		<<endif>>
		<<if $currentLayer == 6>>
			[[Peek at what is waiting for you on the seventh layer|Layer7 Preview]]<br>
		<<endif>>
	<<endif>>


<</nobr>>


[[Perform other stat adjustments to correct for errors|Adjustments]]


[[Return|$return]]


:: Adjust bullets [noreturn]
<<set $temp = 0>>How many bullets would you like to add? (Use a negative number to subtract)

<<textbox "$temp" "">>

[[Confirm|Adjustments][$items[20].count += (parseInt($temp))]]
<<back>>


:: AgeEnd
Your physical age has been reduced to a point where it is not physically possible for you to continue your journey. Perhaps your companions can carry you back to the surface or you can hope to grow up in the Abyss in the habitation option of this layer. But at this point your own choices don't play much role in your fate, so the game will end here.

You may undo your last choice which put you over this limit if you'd like to try to continue your journey with a young (but not too young) body.

<<back>>


:: Relic Info [noreturn]
@@.relicTitle;$ownedRelics[$temp].name@@

[img[setup.ImagePath+$ownedRelics[$temp].pic]]

<<print $ownedRelics[$temp].desc>>

Weight: $ownedRelics[$temp].weight kg
Value: $ownedRelics[$temp].value dubloons
Corruption cost: $ownedRelics[$temp].corr

<<back>>


:: Kin Shifter Use [noreturn]
[img[setup.ImagePath+"Relics/kinshifter.png"]]

A glob of thick, putty-like slime. the face appears decorative. When touched to another relic that you own, a portion of the slime will break off and reshape itself into a perfect replica of that Relic, gaining all of its characteristics, abilities, value, and weight permanently. It cannot shift back to its original form. The amount that breaks off is dependent on the perceived value of the Relic, which can be measured with its dubloon value. The slime contains 70 dubloons worth of morphing power, and can be used on multiple Relics with that total value or less - however, the last Relic that is duplicated can put you over the 70 dubloon total, so long as that Relic is worth 70 dublooms or less. This Relic can also copy Relics woth over 70 dubloons, but in that case that Relic would have to be the sole Relic that you copy.

Some examples: A : (20)->(30)->(20) = total 70, done.

B: (20)->(30)->(40) = total 90, over 70, done.

C: (120) done, only possible configuration for duplicating a Relic worth this much.

<<nobr>>
The current total value of relics you have copied is $tempValue dubloons.<br><br>

<<if $tempValue == 0>>
<<if $ownedRelics.length==1>>
	<<set $temp=0>>
<<else>>
	<<for $i = 0; $i < $ownedRelics.length && !$endloop; $i++>>
		<<if $ownedRelics[$i].name=="Kin Shifter" >>
			<<set $temp=$i>>
			<<set $endloop=false>>
		<<endif>>
	<</for>>
	<<set $soldRelics.push($ownedRelics[$temp])>>
	<<set $ownedRelics.deleteAt($temp)>>
<<endif>>

Please choose the relic you would like to copy:<br>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value)>><<print " dubloons ">><<print "[[Copy|Kin Shifter Use][$ownedRelics.push($ownedRelics[$i]), $tempValue += $ownedRelics[$i].value]]">><br>
	<</capture>>
<</for>>

<<elseif $tempValue <= 69>>
Please choose the relic you would like to copy:<br>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
		<<if $ownedRelics[$i].value < 70>>
			<<print $ownedRelics[$i].name>><<print " for ">><<print ($ownedRelics[$i].value)>><<print " dubloons ">><<print "[[Copy|Kin Shifter Use][$ownedRelics.push($ownedRelics[$i]), $tempValue += $ownedRelics[$i].value]]">><br>
		<<endif>>
	<</capture>>
<</for>>

<<else>>
As you touched the final relic to the Kin Shifter, the last of the goo was used up and your relic was copied. The cute eyes faded as the slime transmuted into the new relic you chose. <br><br>

Now that you have become better equipped, you can continue your journey.<br><br>

[[Return to exploring|$return]]

<<endif>>
<</nobr>>


:: Forbidden Grimoire Select [noreturn]
[img[setup.ImagePath+"Relics/forbiddengrimoire.png"]]
A grisly-looking ragged book written in an indecipherable language. Words can only be seen on the page when a person reads it alone, and they vanish as that one person reads them. This will take whatever skills the reader possesses and improve them greatly, leaving a blank, non-useful book behind. Mechanically speaking, if you let a companion use it, it would double the specific numeric benefit of their special ability - Khemia would reduce travel costs by 4 days, Cloud would redduce bullet costs by 4 (minimum 1), Cherry would reduce status effect lengths by2, and so on. (It doesn't really affect, say, Khemia's ability to slay monsters so much - he's already trained to nearly the maximum human limits, and if there's a monster he can't defeat, it's more about the monster simply being durable beyond the human body's limits than it is about any imperfections in his fighting sills.) Using it on yourself could help you in your normal life, but probably not very much on your journey - the benefit would be substantially less than that from using it on a companion, anyways. If one person were to read it twice (such as through Kin Shifter), the second use would have no benefit - best to spread it out among multiple companions.

It's useless once it's been used once of course, so choose wisely who will get the benefit.

Who do you want to give the grimoire to improve their skills?

<<nobr>>
<<for $i = 0; $i < $hiredCompanions.length; $i++>>
		<<capture $i>>
		<<print "[[$hiredCompanions[$i].name|Forbidden Grimoire Outcome][$name = $hiredCompanions[$i].name]]">><br>
		<</capture>>
<</for>>
<</nobr>>
[[Put away the grimoire without using it|$return]]


:: Forbidden Grimoire Outcome [noreturn]

You have given the eldritch knowledge contained in the book to $name.

<<include `"Forbidden Grimoire " + $name`>>

After $name finishes reading, all words fade from the grimoire's pages, leaving it completely blank.
<i>Note: This limitation is not implemented yet.</i>

[[Return to exploring|$return]]

:: Forbidden Grimoire Maru
While Maru great appreciates your gift and improves the taste of his cooking, you don't gain any material benefit on your journey from giving it to him.

:: Forbidden Grimoire Lily
After reading from the book, Lily's tongue seems just the slightest bit quicker and she sounds more convincing than ever. You now gain 20 extra dubloons when selling Relics with her on the surface.<<set $sellAdd += 10>>

:: Forbidden Grimoire Khemia
After reading from the book, Khemia's seems to always spot even more efficient routes than before, as if he were intuitively able to tell the best paths through the Abyss. Travel times in the Abyss are now reduced by 4 days instead of 2 while he is with you.<<set $timeRed += 2>>

:: Forbidden Grimoire Cherry
After reading from the book, Cherry seems to somberly ponder what she read for a few minutes, occasionally looking at her own body as if she were truly seeing it for the first time. The duration of status effects with a predetermined length is now reduced by 2 days instead of 1.<<set $statRed += 1>>

:: Forbidden Grimoire Cloud
After reading from the book, Cloud lines up his finger with a rock in the distance, mime's a gunshot, then turns to you and smiles. <q>I've got to test out some of the stuff I saw in there, it's crazy stuff.</q> You now have to spend 4 less bullets for any task instead of 2 less.<<set $bullRed += 10>>

:: Forbidden Grimoire Saeko
After reading from the book, Saeko's looks a bit sad as she turns the last page, as if hoping there was more to learn. After that, she is able to use innovative techniques you've never seen before to minimzie your exposure to the miasma whenever possible. You now subtract 10 from all corruption costs in the Abyss, rather than 5.<<set $corrRed += 5>>


:: Balloon Workshop [noreturn]
[img[setup.ImagePath+$items[19].image]]

You can use the balloon to send requests and relics back to Outset Town. You can send up any Relics you have along with what you want done to them and the people at the workshop can reply and send back any modified Relics you want.

<<nobr>>
<<for $i = 0; $i < $ownedRelics.length; $i++>>
	<<capture $i>>
	<<if $ownedRelics[$i].name == "Purity Tree Plank">>

		<br>Would you like to fashion your Purity Wood Planks into protective gear for a value of +25 corruption each?<br>

		[[Use Purity Wood Plank|Balloon Workshop][$ownedRelics.deleteAt($i), $corruption += 25]]<br>
	<<endif>>

	<<if $ownedRelics[$i].name == "Romer Stones" && $warmCloth == 0 && $coolCloth == 0>>
	<br>You muse over what you can do with the Romer Stones, taking advantage over their ability for limitless small-scale heating or cooling.<br><br>
	You can either buy some winter clothers for 30 dubloons to craft self-warming winter gear, or you could buy some light summer clothing for 25 dubloons to craft some cooling summer clothes.<br>
		[[Use the Romer Stones for self-warming winter gear|Balloon Workshop][$ownedRelics.deleteAt($i), $items[22].count = 1, $dubloons -=30,$warmCloth=1]]<br>
		[[Use the Romer Stones for self-cooling summer gear|Balloon Workshop][$ownedRelics.deleteAt($i), $items[23].count = 1, $dubloons -=25, $coolCloth=1]]<br>
	<<endif>>
	<<if $ownedRelics[$i].name == "Brave Vector" && $slingshot == 0>>
		<br>The Brave Vector seems like it should have some application as a weapon, but it turns out that it is exceedingly difficult to use a bent pipe like that as a gun substitute. Luckily, with the help of the resident Relic experts, you can change the form of the Brave Vector to a much more useful one. They seem to reccomend a sort of metal slingshot design, which should be able to function like a gun, but will be able to use anything of approximately the correct size as ammo. <br>
		<br>The raw materials for this are relatively cheap, letting you reshape the Brave Vector for only 10 dubloons.<br>
		[[Reshape the Brave Vector into a powerful slingshot|Balloon Workshop][$slingshot = 1, $dubloon -= 10]]<br>
	<<endif>>
	<<if $ownedRelics[$i].name == "Joyous Sunder" && $joyousSword == 0>>
		<br>The Joyous Sunder is an incredibly powerful offensive tool, but it is limited by its form as a small knife. Luckily, with the help of the local Relic Engineers, you can reshape this Relic into a true sword that an expert swordsman would feel comfortable using. A weapon like that would be literally unstoppable by any enemy that can be defeated by physical attacks and does not disable the user before they can get close enough to use it. This would be most useful in the hands of someone like Khemia, letting him defeat powerful beasts from the depths of the Abyss without fear of injury himself. The materials to forge a sword from the Joyous Sunder would cost you 20 dubloons.<br>
		[[Reshape the Joyous Sunder into a true sword|Balloon Workshop][$joyousSword = 1, $dubloon -= 20]]<br>
	<<endif>>
	<</capture>>
<</for>>
<</nobr>>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Admin [noreturn]
You can send a request to the Outset Town Administration. There seem to be a number of services that are provided here for people who need them, including managing debts and changing your legal name.

For a small fee of 10 dubloons, you can change your legal name from $app.name to whatever you wish.
[[Change your name|Balloon Name]]

<<if $hiredCompanions.some(e => e.name === "Cloud")>>
You can use your companion Cloud's connections to borrow some money, but you will need to pay back an extra 20% as interest before you settle down for any voluntary habitation option.
[[Borrow more money|Balloon debt1]]
<<endif>>
<<if $debt > 0>>
You currently have $debt dubloons of debt, which you can pay off now to allow yourself to settle down at a habitation option.
[[Pay off your debt|Balloon debt2]]
<<endif>>

[[Continue using the commerce balloon|Commerce Balloon]]


:: Balloon Name [noreturn]
<<set $dubloons -= 10>>

The balloon sends down some surprisingly concise forms where you can fill out your new name, changing it for all official purposes.

What is your new name?
<<textbox "$app.name" "Nana" "Commerce Balloon">>


:: Balloon debt1 [noreturn]
Cloud is willing to allow you to use his connections to fund your expedition, as long as you can pay back the loan after you're done, with interest of course.

How many dubloons would you like to borrow?
<<textbox "$temp" "">>

[[Confirm|Commerce Balloon][$dubloons += parseInt($temp), $debt += parseInt(Math.round($temp * 1.2))]]
<<back>>


:: Balloon debt2 [noreturn]
In order to finally settle down at an ending, you must pay off your debt to Cloud's mysterious connections. You currently owe $debt dubloons of debt to them.

How many dubloons would you like to pay back?
<<textbox "$temp" "">>

[[Confirm|Commerce Balloon][$dubloons -= parseInt($temp), $debt -= parseInt($temp)]]
<<back>>

:: CurseRemoval
<<set _curseDeleted=false>>
<<for _i = 0; _i < $playerCurses.length; _i++>>
	<<if  !_curseDeleted && $playerCurses[_i].name == $targetCurse.name>>
		<<if $targetCurse.type == "Height">>
			<<set _j=$HeightLog.lastIndexOf(e => e.name === $targetCurse.name)>>
			<<set $HeightLog.deleteAt(_j)>>
		<<elseif $targetCurse.type == "Gender">>
			<<set _j=$GenderLog.lastIndexOf(e => e.name === $targetCurse.name)>>
			<<set $GenderLog.deleteAt(_j)>>
		<<elseif $targetCurse.type == "Age">>
			<<set _j=$AgeLog.lastIndexOf(e => e.name === $targetCurse.name)>>
			<<set $AgeLog.deleteAt(_j)>>
		<<elseif $targetCurse.type == "Libido">>
			<<set _j=$LibidoLog.lastIndexOf(e => e.name === $targetCurse.name)>>
			<<set $LibidoLog.deleteAt(_j)>>
		<<endif>>
		<<set $playerCurses.deleteAt(_i)>>
		<<set _curseDeleted=true>>
	<<endif>>
<</for>>

:: GeneralTime
<<nobr>>

<<if $status.duration > 0>>
	<<set $status.duration -= 1>>
	<<else>>
	<<set $status.penalty = 0>>
<<endif>>

<<if !$tempTimeFixed>>
	<<if $layer==1>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime - $timeRed + $status.penalty), 0))>>
		<<set $timeL1 += $tempTime>>/* layer specific */
	<<elseif $layer==2>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime - $timeRed + $status.penalty), 0))>>
		<<set $timeL2 += $tempTime>>
		<<if $items[1].count > 9>>
			<<set $timeL2T1 += $tempTime>>
		<<endif>>
	<<elseif $layer==3>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime - $timeRed + $status.penalty), 0))>>
		<<set $timeL3 += $tempTime>>
		<<if $items[9].count > 0 || $items[10].count > 0 || $items[10].count > 0 || $light == 1>>
			<<else>><<set $timeL3T2 += $tempTime>>
		<<endif>>
		<<set $timeL3T1 += $tempTime>>
	<<elseif $layer==4>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime - $timeRed + $status.penalty), 0))>>
		<<if $torchUse == 1 && $heat == 1>>
				<<set $tempTime -= 2>>
			<<elseif $items[9].count > 0 && $torchUse == 1>>
				<<set $tempTime -= 2>>
				<<set $items[9].count -= 1>>
		<<endif>>
		<<set $timeL4 += $tempTime>>
		<<set $timeL4T1 += $tempTime>>
	<<elseif $layer==5>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime - $timeRed + $status.penalty + (Math.trunc($hexflame / 10)) - $cool), 0))>>
		<<set $timeL5 += $tempTime>>
		<<if ($items[0].count + $items[3].count) > 10>>
			<<set $timeL5T2 += $tempTime>>
		<<endif>>
		<<set $timeL5T1 += $tempTime>>
	<<elseif $layer==6>>
		<<set $tempTime = (Math.max((1+$SizeHandicap)*($tempTime  - $timeRed + $status.penalty -$cool), 0))>>
		<<set $timeL6 += $tempTime>>
		<<set $hexflame += $tempTime>>
		<<if $dubloons > 199>>
			<<set $timeL6T2 += $tempTime>>
		<<endif>>
		<<set $timeL6T1 += $tempTime>>
	<<elseif $layer==7>>
		<<set $timeL7 += $tempTime>>
		<<set $timeL7T2 += $tempTime>>
		<<set $time += $tempTime>>
		<<if $dubloons >= 300>>
			<<set $dubloons -= 1>>
			<<elseif $dubloons >= 100>>
			<<set $dubloons -= 2>>
			<<else>>
			<<set $dubloons -= 3>>
		<<endif>>
	<<endif>>
<<endif>>

<<set $time += $tempTime>>
<<if $forageFood == 0>>
	<<set $items[1].count -= $tempTime>>
<<else>>
	<<set $foodL1 += $tempTime>>
	<<if $abyssKnow == 0>>
		<<for $i = 0; $i < $tempTime; $i++>>
			<<if $layer==1>>
				<<set $GenderLog.push($ForageFoodMajor)>>/* layer specific */
			<<elseif $layer==2>>
				<<if $mudHunt == 1 && $items[20].count > 0>>
					<<set $items[20].count -= $tempTime>>
				<<elseif $mudHunt == 0>>
					<<set $LibidoLog.push($ForageFoodMajor)>>
				<<endif>>
			<<elseif $layer==3>>
				<<set $AgeLog.push($ForageFoodMajor)>>
			<<elseif $layer==4>>
				<<set $HeightLog.push($ForageFoodMajor)>>
			<<elseif $layer==5>>
				<<set $crumbleFluid += (5 * $tempTime)>>
			<<elseif $layer==6>>
				<<set $foodL6 += $tempTime>>
			<<endif>>
		<</for>>
	<<else>>
		<<for $i = 0; $i < $tempTime; $i++>>
			<<if $layer==2>>
				<<if $mudHunt == 1 && $items[20].count > 0>>
					<<set $items[20].count -= $tempTime>>
				<<elseif $mudHunt == 0>>
					<<set $lastFlan=$time+1>>
				<<endif>>
			<<elseif $layer==3>>
				<<set $AgeLog.push($ForageFoodMinor)>>
			<<elseif $layer==4>>
				<<set $HeightLog.push($ForageFoodMinor)>>
			<<elseif $layer==5>>
				<<set $crumbleFluid += $tempTime>>
			<<elseif $layer==6>>
				<<set $foodL6 += $tempTime>>
			<<endif>>
		<</for>>	
	<<endif>>
<<endif>>
<<for $i = 0; $i < $tempTime; $i++>>
	<<if $forageWater == 0>>
		<<if $items[3].count > 0>>
			<<set $items[3].count -= 1>>
			<<set $items[2].count += 1>>
		<<else>>
			<<set $items[0].count -= 1>>
		<<endif>>
	<<else>>
		<<set $waterL1 += 1>>
		<<if $abyssKnow == 0>>
			<<for $i = 0; $i < $tempTime; $i++>>
				<<if $layer==1>>
					<<set $GenderLog.push($ForageWaterMajor)>>/* layer specific */
				<<elseif $layer==2>>
					<<set $bewitchBabies += 1>>
				<<elseif $layer==3>>
					<<set $waterL2 += 1>>
				<<elseif $layer==4>>
					<<set $waterL4 += 1>>
					<<if $abyssKnow == 0>>
						<<set $algalSize += 1>>
					<<endif>>
				<<elseif $layer==5>>	
					<<set $waterL5 += 1>>
				<<elseif $layer==6>>
					<<set $waterL6 += 1>>
					<<if !($hiredCompanions.some(e => e.name === "Saeko") && $items[17].count > 0)>>
						<<set $hexflame += 1>>
					<<endif>>
				<<endif>>			
			<</for>>
		<<else>>
			<<for $i = 0; $i < $tempTime; $i++>>
				<<if $layer==3>>
					<<set $waterL2 += 1>>
				<<elseif $layer==4>>
					<<set $waterL4 += 1>>
					<<if $abyssKnow == 0>>
						<<set $algalSize += 1>>
					<<endif>>
				<<elseif $layer==5>>
					<<set $waterL5 += 1>>
				<<elseif $layer==6>>
					<<set $waterL6 += 1>>
					<<if !($hiredCompanions.some(e => e.name === "Saeko") && $items[17].count > 0)>>
						<<set $hexflame += 1>>
					<<endif>>
				<<endif>>			
			<</for>>		
		<<endif>>
	<<endif>>
	<<if $hexflame > 9>>
		<<set $hexflame -= 1>>
	<<endif>>
<</for>>
<<set $tempTimeFixed=0>>
<</nobr>>